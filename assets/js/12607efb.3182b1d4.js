"use strict";(self.webpackChunk_agoralabs_sh_avm_web_provider=self.webpackChunk_agoralabs_sh_avm_web_provider||[]).push([[920],{2116:function(n,a,e){e.r(a),e.d(a,{assets:function(){return g},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return h}});var t=e(7624),r=e(4552),o=e(3500),s=e(6568),i=e(6200);const c={},d="Signing And Posting Transactions",l={id:"clients/signing-and-posting-transactions",title:"Signing And Posting Transactions",description:"<TOCInline",source:"@site/docs/clients/signing-and-posting-transactions.mdx",sourceDirName:"clients",slug:"/clients/signing-and-posting-transactions",permalink:"/clients/signing-and-posting-transactions",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Posting Transactions",permalink:"/clients/posting-transactions"},next:{title:"Providers",permalink:"/providers/"}},g={},h=[{value:"Overview",id:"overview",level:2},{value:"Sending transactions to be signed &amp; posted to the provider",id:"sending-transactions-to-be-signed--posted-to-the-provider",level:2}];function p(n){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.M)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"signing-and-posting-transactions",children:"Signing And Posting Transactions"}),"\n",(0,t.jsx)(i.c,{maxHeadingLevel:4,toc:h}),"\n",(0,t.jsx)(a.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(a.p,{children:["Providers may have the functionality to both sign & post transactions. This method allows clients to avoid using the previous methods of ",(0,t.jsx)(a.a,{href:"signing-transactions",children:"signing transactions"})," and ",(0,t.jsx)(a.a,{href:"posting-transactions",children:"posting transactions"})," separately and simply performs the functionality of these previous methods within one method."]}),"\n",(0,t.jsx)(a.h2,{id:"sending-transactions-to-be-signed--posted-to-the-provider",children:"Sending transactions to be signed & posted to the provider"}),"\n",(0,t.jsx)(a.admonition,{type:"note",children:(0,t.jsxs)(a.p,{children:["See ",(0,t.jsx)(a.a,{href:"signing-transactions",children:"signing transactions"})," for more examples."]})}),"\n",(0,t.jsxs)(o.c,{defaultValue:"javascript",values:[{label:"Javascript",value:"javascript"},{label:"TypeScript",value:"typescript"}],children:[(0,t.jsx)(s.c,{value:"javascript",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-js",children:"const algosdk = require('algosdk');\n\n// create a transaction\ntry {\n  const client = new algosdk.Algodv2(\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n    'http://localhost',\n    '4001',\n  );\n  const encoder = new TextEncoder();\n  const suggestedParams = await client.getTransactionParams().do();\n  const transaction = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    amount: algosdk.algosToMicroalgos(1),\n    from: 'P3AIQVDJ2CTH54KSJE63YWB7IZGS4W4JGC53I6GK72BGZ5BXO2B2PS4M4U',\n    note: encoder.encode('Hello Human!'),\n    suggestedParams,\n    to: '6GT6EXFDAHZDZYUOPT725ZRWYBZDCEGYT7SYYXGJKRFUAG5B7JMI7DQRNQ',\n  });\n  const transactionBytes = transaction.toByte();\n} catch (error) {\n  // handle error\n}\n\n// initialized client\nclient.onSignAndPostTransactions(({ error, result }) => {\n  if (error) {\n    console.error('error:', error);\n\n    return;\n  }\n\n  console.log(result);\n  /*\n  {\n    providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n    txnIDs: [\n      'OKU6A2Q...',\n    ],\n  }\n  */\n});\n\n// broadcast a sign and post transactions request\nclient.signAndPostTransactions({\n  providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n    txns: [\n    {\n      txn: btoa(String.fromCodePoint(...transactionBytes)), // convert to base64 string\n    },\n  ],\n});\n"})})}),(0,t.jsx)(s.c,{value:"typescript",children:(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-typescript",children:"import {\n  Algodv2,\n  algosToMicroalgos,\n  makePaymentTxnWithSuggestedParamsFromObject,\n  SuggestedParams,\n  Transaction,\n} from 'algosdk';\nimport { IAVMWebClientListenerOptions } from '@agoralabs-sh/avm-web-provider';\n\n// create a transaction\ntry {\n  const client: Algodv2 = new Algodv2(\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n    'http://localhost',\n    '4001',\n  );\n  const encoder: TextEncoder = new TextEncoder();\n  const suggestedParams: SuggestedParams = await client.getTransactionParams().do();\n  const transaction: Transaction = makePaymentTxnWithSuggestedParamsFromObject({\n    amount: algosToMicroalgos(1),\n    from: 'P3AIQVDJ2CTH54KSJE63YWB7IZGS4W4JGC53I6GK72BGZ5BXO2B2PS4M4U',\n    note: encoder.encode('Hello Human!'),\n    suggestedParams,\n    to: '6GT6EXFDAHZDZYUOPT725ZRWYBZDCEGYT7SYYXGJKRFUAG5B7JMI7DQRNQ',\n  });\n  const transactionBytes: Uint8Array = transaction.toByte();\n} catch (error) {\n  // handle error\n}\n\n// initialized client\nclient.onSignAndPostTransactions(({ error, result }: IAVMWebClientListenerOptions) => {\n  if (error) {\n    console.error('error:', error);\n\n    return;\n  }\n\n  console.log(result);\n  /*\n  {\n    providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n    txnIDs: [\n      'OKU6A2Q...',\n    ],\n  }\n  */\n});\n\n// broadcast a sign and post transactions request\nclient.signAndPostTransactions({\n  providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n  txns: [\n    {\n      txn: btoa(String.fromCodePoint(...transactionBytes)), // convert to base64 string\n    },\n  ],\n});\n"})})})]}),"\n",(0,t.jsx)(a.admonition,{type:"caution",children:(0,t.jsxs)(a.p,{children:["If this method is not supported, then a ",(0,t.jsx)(a.a,{href:"../../api-reference/errors#methodnotsupportederror",children:(0,t.jsx)(a.code,{children:"MethodNotSupportedError"})})," should be thrown."]})}),"\n",(0,t.jsx)(a.admonition,{type:"caution",children:(0,t.jsxs)(a.p,{children:["If there is a group of atomic transactions, but the computed group ID is invalid, then a ",(0,t.jsx)(a.a,{href:"../../api-reference/errors#invalidgroupiderror",children:(0,t.jsx)(a.code,{children:"InvalidGroupIdError"})})," should be thrown."]})}),"\n",(0,t.jsx)(a.admonition,{type:"caution",children:(0,t.jsxs)(a.p,{children:["If any of the transactions are malformed, then a ",(0,t.jsx)(a.a,{href:"../../api-reference/errors#invalidinputerror",children:(0,t.jsx)(a.code,{children:"InvalidInputError"})})," should be thrown."]})}),"\n",(0,t.jsx)(a.admonition,{type:"caution",children:(0,t.jsxs)(a.p,{children:["If the transactions fail to be accepted by the network, then a ",(0,t.jsx)(a.a,{href:"../../api-reference/errors#failedtopostsometransactionserror",children:(0,t.jsx)(a.code,{children:"FailedToPostSomeTransactionsError"})})," should be thrown."]})})]})}function u(n={}){const{wrapper:a}={...(0,r.M)(),...n.components};return a?(0,t.jsx)(a,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}}}]);