"use strict";(self.webpackChunk_agoralabs_sh_avm_web_provider=self.webpackChunk_agoralabs_sh_avm_web_provider||[]).push([[640],{2864:function(e,n,s){s.r(n),s.d(n,{assets:function(){return v},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return p}});var r=s(7624),i=s(4552),t=s(3500),a=s(6568),o=s(6200);const c={},l="Discover Providers",d={id:"clients/discover-providers",title:"Discover Providers",description:"<TOCInline",source:"@site/docs/clients/discover-providers.mdx",sourceDirName:"clients",slug:"/clients/discover-providers",permalink:"/clients/discover-providers",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Getting Started",permalink:"/clients/getting-started"},next:{title:"Enabling A Client",permalink:"/clients/enabling-a-client"}},v={},p=[{value:"Overview",id:"overview",level:2},{value:"Discovering all providers",id:"discovering-all-providers",level:2},{value:"Discovering a specific provider",id:"discovering-a-specific-provider",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"discover-providers",children:"Discover Providers"}),"\n",(0,r.jsx)(o.c,{maxHeadingLevel:4,toc:p}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Before we can start interacting with a provider, we first need to find out what providers are available and what AVM networks & methods these providers support."}),"\n",(0,r.jsx)(n.h2,{id:"discovering-all-providers",children:"Discovering all providers"}),"\n",(0,r.jsxs)(n.p,{children:["The first thing we want to do, after ",(0,r.jsx)(n.a,{href:"getting-started",children:"initialization"}),", is start listening to discover messages. The callback passed will be called everytime a ",(0,r.jsx)(n.code,{children:"discover"})," message is responded to by a provider. However, before we receive any ",(0,r.jsx)(n.code,{children:"discover"})," messages we need then broadcast to any providers a request."]}),"\n",(0,r.jsxs)(t.c,{defaultValue:"javascript",values:[{label:"Javascript",value:"javascript"},{label:"TypeScript",value:"typescript"}],children:[(0,r.jsx)(a.c,{value:"javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// initialized client\nclient.onDiscover(({ error, result }) => {\n  if (error) {\n    console.error('error:', error);\n\n    return;\n  }\n\n  console.log(result);\n  /*\n  {\n    host: 'https://awesome-wallet.com',\n    name: 'Awesome Wallet',\n    networks: [\n      {\n        genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n        genesisId: 'testnet-v1.0',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n      {\n        genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n        genesisId: 'voitest-v1',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n    ],\n    providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n  }\n  */\n});\n\n// broadcast a discover request\nclient.discover();\n"})})}),(0,r.jsx)(a.c,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { IAVMWebClientListenerOptions } from '@agoralabs-sh/avm-web-provider';\n\n// initialized client\nclient.onDiscover(({ error, result }: IAVMWebClientListenerOptions) => {\n  if (error) {\n    console.error('error:', error);\n\n    return;\n  }\n\n  console.log(result);\n  /*\n  {\n    host: 'https://awesome-wallet.com',\n    name: 'Awesome Wallet',\n    networks: [\n      {\n        genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n        genesisId: 'testnet-v1.0',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n      {\n        genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n        genesisId: 'voitest-v1',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n    ],\n    providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n  }\n  */\n});\n\n// broadcast a discover request\nclient.discover();\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"discovering-a-specific-provider",children:"Discovering a specific provider"}),"\n",(0,r.jsx)(n.p,{children:"If you know the ID of the provider, you can request only a response from that provider."}),"\n",(0,r.jsx)(n.p,{children:"As before, let's first add a listener and then broadcast, but this time we will specify the provider ID:"}),"\n",(0,r.jsxs)(t.c,{defaultValue:"javascript",values:[{label:"Javascript",value:"javascript"},{label:"TypeScript",value:"typescript"}],children:[(0,r.jsx)(a.c,{value:"javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const providerId = '02657eaf-be17-4efc-b0a4-19d654b2448e';\n\n// initialized client\nclient.onDiscover(({ error, result }) => {\n  if (error) {\n    console.error('error:', error);\n\n    return;\n  }\n\n  console.log(result);\n  /*\n  {\n    host: 'https://awesome-wallet.com',\n    name: 'Awesome Wallet',\n    networks: [\n      {\n        genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n        genesisId: 'testnet-v1.0',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n      {\n        genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n        genesisId: 'voitest-v1',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n    ],\n    providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n  }\n  */\n});\n\n// broadcast a discover request\nclient.discover({ providerId });\n"})})}),(0,r.jsx)(a.c,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { IAVMWebClientListenerOptions } from '@agoralabs-sh/avm-web-provider';\n\nconst providerId: string = '02657eaf-be17-4efc-b0a4-19d654b2448e';\n\n// initialized client\nclient.onDiscover(({ error, result }: IAVMWebClientListenerOptions) => {\n  if (error) {\n    console.error('error:', error);\n\n    return;\n  }\n\n  console.log(result);\n  /*\n  {\n    host: 'https://awesome-wallet.com',\n    name: 'Awesome Wallet',\n    networks: [\n      {\n        genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n        genesisId: 'testnet-v1.0',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n      {\n        genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n        genesisId: 'voitest-v1',\n        methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n        ],\n      },\n    ],\n    providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n  }\n  */\n});\n\n// broadcast a discover request\nclient.discover({ providerId });\n"})})})]})]})}function u(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);