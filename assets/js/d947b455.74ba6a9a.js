"use strict";(self.webpackChunk_agoralabs_sh_avm_web_provider=self.webpackChunk_agoralabs_sh_avm_web_provider||[]).push([[820],{8652:function(e,n,s){s.r(n),s.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return v}});var i=s(7624),r=s(4552),t=s(3500),a=s(6568),o=s(6200);const d={},c="Responding To Discover Requests",p={id:"providers/responding-to-discover-requests",title:"Responding To Discover Requests",description:"<TOCInline",source:"@site/docs/providers/responding-to-discover-requests.mdx",sourceDirName:"providers",slug:"/providers/responding-to-discover-requests",permalink:"/providers/responding-to-discover-requests",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Getting Started",permalink:"/providers/getting-started"},next:{title:"Responding To Enable Requests",permalink:"/providers/responding-to-enable-requests"}},l={},v=[{value:"Overview",id:"overview",level:2},{value:"Responding to an anonymous request",id:"responding-to-an-anonymous-request",level:2},{value:"Responding to a specific provider request",id:"responding-to-a-specific-provider-request",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"responding-to-discover-requests",children:"Responding To Discover Requests"}),"\n",(0,i.jsx)(o.c,{maxHeadingLevel:4,toc:v}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"It is likely that clients will want to find out the capabilities of your provider before they start interacting with it. Therefore, it is good practice to handle discover request from clients, responding with your provider's supported networks & methods."}),"\n",(0,i.jsx)(n.h2,{id:"responding-to-an-anonymous-request",children:"Responding to an anonymous request"}),"\n",(0,i.jsx)(n.p,{children:"For clients that have not specified a provider, it means the client would like to know all available providers. Once our provider object has been initialized, we can simply listen to events and respond:"}),"\n",(0,i.jsxs)(t.c,{defaultValue:"javascript",values:[{label:"Javascript",value:"javascript"},{label:"TypeScript",value:"typescript"}],children:[(0,i.jsx)(a.c,{value:"javascript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// initialized provider\nprovider.onDiscover(({ params }) => {\n  if (!params || !params.providerId) {\n    return {\n      host: 'https://awesome-wallet.com',\n      name: 'Awesome Wallet',\n      networks: [\n        {\n          genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n          genesisId: 'testnet-v1.0',\n          methods: [\n            'disable',\n            'enable',\n            'post_transactions',\n            'sign_and_post_transactions',\n            'sign_transactions',\n          ],\n        },\n        {\n          genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n          genesisId: 'voitest-v1',\n          methods: [\n            'disable',\n            'enable',\n            'post_transactions',\n            'sign_and_post_transactions',\n            'sign_transactions',\n          ],\n        },\n      ],\n      providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n    };\n  }\n});\n"})})}),(0,i.jsx)(a.c,{value:"typescript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import type { IAVMWebProviderCallbackOptions } from '@agoralabs-sh/avm-web-provider';\n\n// initialized provider\nprovider.onDiscover(({ params }: IAVMWebProviderCallbackOptions) => {\n  if (!params?.providerId) {\n    return {\n      host: 'https://awesome-wallet.com',\n      name: 'Awesome Wallet',\n      networks: [\n        {\n          genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n          genesisId: 'testnet-v1.0',\n          methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n          ],\n        },\n        {\n          genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n          genesisId: 'voitest-v1',\n          methods: [\n          'disable',\n          'enable',\n          'post_transactions',\n          'sign_and_post_transactions',\n          'sign_transactions',\n          ],\n        },\n      ],\n      providerId: '02657eaf-be17-4efc-b0a4-19d654b2448e',\n    };\n  }\n});\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"responding-to-a-specific-provider-request",children:"Responding to a specific provider request"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"discover"})," request allow the client to specify the provider. This is denoted in the supplied ",(0,i.jsx)(n.code,{children:"params.providerId"})," parameter. Providers with the matching ID should respond:"]}),"\n",(0,i.jsxs)(t.c,{defaultValue:"javascript",values:[{label:"Javascript",value:"javascript"},{label:"TypeScript",value:"typescript"}],children:[(0,i.jsx)(a.c,{value:"javascript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const providerId = '02657eaf-be17-4efc-b0a4-19d654b2448e';\n\n// initialized provider\nprovider.onDiscover(({ params }) => {\n  if (!params || params.providerId === providerId) {\n    return {\n      host: 'https://awesome-wallet.com',\n      name: 'Awesome Wallet',\n      networks: [\n        {\n          genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n          genesisId: 'testnet-v1.0',\n          methods: [\n            'disable',\n            'enable',\n            'post_transactions',\n            'sign_and_post_transactions',\n            'sign_transactions',\n          ],\n        },\n        {\n          genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n          genesisId: 'voitest-v1',\n          methods: [\n            'disable',\n            'enable',\n            'post_transactions',\n            'sign_and_post_transactions',\n            'sign_transactions',\n          ],\n        },\n      ],\n      providerId,\n    };\n  }\n});\n"})})}),(0,i.jsx)(a.c,{value:"typescript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import type { IAVMWebProviderCallbackOptions } from '@agoralabs-sh/avm-web-provider';\n\nconst providerId: string = '02657eaf-be17-4efc-b0a4-19d654b2448e';\n\n// initialized provider\nprovider.onDiscover(({ params }: IAVMWebProviderCallbackOptions) => {\n  if (!params || params.providerId === providerId) {\n    return {\n      host: 'https://awesome-wallet.com',\n      name: 'Awesome Wallet',\n      networks: [\n        {\n          genesisHash: 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=',\n          genesisId: 'testnet-v1.0',\n          methods: [\n            'disable',\n            'enable',\n            'post_transactions',\n            'sign_and_post_transactions',\n            'sign_transactions',\n          ],\n        },\n        {\n          genesisHash: 'IXnoWtviVVJW5LGivNFc0Dq14V3kqaXuK2u5OQrdVZo=',\n          genesisId: 'voitest-v1',\n          methods: [\n            'disable',\n            'enable',\n            'post_transactions',\n            'sign_and_post_transactions',\n            'sign_transactions',\n          ],\n        },\n      ],\n      providerId,\n    };\n  }\n});\n"})})})]})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);